module registers (    
    //input signals 
    input asel1[3],
    input asel2[3], 
    input wa1[3], 
    input wa2[3],
    input we1,
    input we2,
    
    input fsm1, //input from fsm player 1 
    input alu1, //input from alu player 1 
    input alu2, //input from alu player 2
    
    output ainput1, //fed into A of alu1
    output back1, //fed back into fsm1 
    output ainput2, //fed into A of alu2
    output back2, //fed back into fsm2 
    output goalreg, //aka BSEL 000
    
    //for connecting to LED/7 seg
    output lane1p1,
    output lane2p1,
    output lane3p1,
    output lane1p2,
    output lane2p2,
    output lane3p2,
    output p1num,
    output p2num
  ) 


  {
  var r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12; 
  always {
    ainput1 = 0; 
    ainput2 = 0; 
    back1 = 0; 
    back2 = 0; 
    goalreg = r3;  
    p1num = r1;
    p2num = r2;
    lane1p1 = r4;
    lane2p1 = r5;
    lane3p1 = r6;
    lane1p2 = r7;
    lane2p2 = r8;
    lane3p2 = r9;
    
    //to write values   
    if (we1 == 1){
      //player current value
      if (wa1 == b000){
        r1 = alu1;}
      
      //cmp register
      if (wa1 == b101){
        r10 = alu1;
      }
      
      //lane registers
      if (wa1 == b010){
        r4 = alu1;
      }
      
      if (wa1 == b011){
       r5 = alu1;
      }
      
      if (wa1 == b100){
        r6 = alu1;
      }
      
      //change lane register
      if (wa1 == b110){
        r12 = alu1;
      }
      
      //set problem register (only player 1 fsm)
      if (wa1 == b001){
        r10 = fsm1;
      }
    }
    
    if (we2 == 1){
      //player current value
      if (wa2 == b000){
        r2 = alu2;}
        
      //cmp register
      if (wa1 == b101){
        r11 = alu2;
      }
      
      //lane registers
      if (wa1 == b010){
        r7 = alu2;
      }
      
      if (wa1 == b011){
       r8 = alu2;
      }
      
      if (wa1 == b100){
        r9 = alu2;
      }
      
      //change lane register
      if (wa1 == b110){
        r12 = alu2;
      }
    }
    
    //player current value 
    if (asel1 == b000){
      ainput1 = r1;}
      
    if (asel2 == b000){
      ainput2 = r2;}
    
    //lane registers
    if (asel1 == b010){
       ainput1 = r4;}
    
    if (asel1 == b011){
       ainput1 = r5;}
    
    if (asel1 == b100){
      ainput1 = r6;}
     
    if (asel2 == b010){
       ainput2 = r7;}
    
    if (asel2 == b011){
       ainput2 = r8;}
    
    if (asel2 == b100){
      ainput2 = r9;}  
      
    //comparing result 
    if (asel1 == b101){
      ainput1 = r10;}
      
    if (asel2 == b101){
      ainput2 = r11;}
      
      
  }
}
